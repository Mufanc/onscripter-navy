name: Build AppImage

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    name: Build AppImage
    runs-on: ubuntu-latest
    env:
      LINUXDEPLOY: https://github.com/linuxdeploy/linuxdeploy/releases/download/1-alpha-20231026-1/linuxdeploy-x86_64.AppImage
      APPIMAGETOOL: https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Deps
        run: |
          sudo apt update
          sudo apt install -y libjpeg-dev libbz2-dev libsdl1.2-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsmpeg-dev liblua5.1-0-dev libfontconfig1-dev libavifile-0.7-dev
          sudo apt install desktop-file-utils

      - name: Make
        id: build_variants
        run: make -j4

      - name: Build AppImage
        shell: bash
        id: build_appimage
        run: |
          wget $LINUXDEPLOY -O linuxdeploy.AppImage
          wget $APPIMAGETOOL -O appimagetool.AppImage
          chmod +x ./linuxdeploy.AppImage
          chmod +x ./appimagetool.AppImage
          ./linuxdeploy.AppImage --appimage-extract-and-run --appdir onscripter-navy -e build/onscripter --create-desktop-file --icon-file onscripter.png
          ./appimagetool.AppImage --appimage-extract-and-run onscripter-navy
          echo "name=$(ls onscripter*AppImage)" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build_appimage.outputs.name }}
          path: "onscripter*.AppImage"
